name: Main

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js 22.2
        uses: actions/setup-node@v4
        with:
          node-version: 22.2
      - name: Generate .env file
        run: cp .env.example .env
      - name: Install packages
        run: npm ci
      - name: Lint the code
        run: npm run lint
      - name: Build and test the code
        run: npm run test
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
        with:
          name: build
          path: build
          retention-days: 1
          compression-level: 0

  auto-merge:
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          target: minor
          command: squash and merge
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-image:
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: prod.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
